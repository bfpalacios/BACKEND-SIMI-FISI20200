USE `dbsimi`;

-- ------------------------------------------------------------
-- store procedure 'listar voucher'
-- ------------------------------------------------------------
DROP procedure IF EXISTS `SP_VOUCHER_LIST`;
DELIMITER $$
CREATE PROCEDURE SP_VOUCHER_LIS()
BEGIN
	SELECT 
    COD AS CODIGO,
    SEC AS SECUENCIA,
    DESCRIPCION,
    NRODOCUMENTO,
    IMPORTE,
    FECHA,
    HORA,
    COMILLA AS ESTADO
    FROM TMVOUCHER;
END$$
DELIMITER ;

-- ------------------------------------------------------------
-- store procedure 'listar programación de cursos'
-- ------------------------------------------------------------
DROP PROCEDURE IF EXISTS SP_PROGRAMACION_LIST;
DELIMITER //
CREATE PROCEDURE SP_PROGRAMACION_LIST() 
BEGIN
  SELECT PROG.ID_PROGCURSO, PROG.FK_ID_PROG_DOC_CUR, PROG.FK_ID_AULA, PROG.FK_ID_GRUPOHORARIO, 
  PROG.FK_ID_ESTADO_PROGCURSO, IDIOMA.NOM_IDIOMA, NIVEL.NOM_NIVEL, CURSO.CICLO, 
  CONCAT(PER.NOMBRE,  " ", PER.APELLIDO_PAT, " ", PER.APELLIDO_MAT) AS DOCENTE, 
  GHOR.NOM_GRUPOHORARIO, CONCAT(HCLA.HORA_INICIO," a ", HCLA.HORA_SALIDA) AS HORA, COUNT( DISTINCT  MAT.ID_MATRICULA) AS MATRICULADOS
  FROM TPPROG_CURSO PROG
  INNER JOIN TPPROG_DOC_CURSO PROGDC ON PROG.FK_ID_PROG_DOC_CUR = PROGDC.ID_PROG_DOC_CUR
  INNER JOIN TMCURSO CURSO ON CURSO.ID_CURSO = PROGDC.FK_ID_CURSO
  INNER JOIN TMIDIOMA IDIOMA ON IDIOMA.ID_IDIOMA = CURSO.FK_ID_IDIOMA
  INNER JOIN TXNIVEL NIVEL ON NIVEL.ID_NIVEL = CURSO.FK_ID_NIVEL
  INNER JOIN TMDOCENTE DOC ON DOC.COD_DOCENTE_CI = PROGDC.FK_ID_DOCENTE
  INNER JOIN TMUSUARIO USUARIO ON USUARIO.ID_USUARIO = DOC.FK_ID_USUARIO
  INNER JOIN TMPERSONA PER ON PER.ID_PERSONA = USUARIO.FK_ID_PERSONA
  INNER JOIN TMGRUPO_HORARIO GHOR ON GHOR.ID_GRUPOHORARIO = PROG.FK_ID_GRUPOHORARIO
  INNER JOIN TMHORARIO_GRUPO_HORARIO HGO ON HGO.FK_ID_GRUPOHORARIO = GHOR.ID_GRUPOHORARIO
  INNER JOIN TXHORAS_CLASE HCLA ON HCLA.ID_HORA = HGO.FK_ID_HORA
  LEFT JOIN TPMATRICULA MAT ON PROG.ID_PROGCURSO = MAT.FK_ID_PROGCURSO
  GROUP BY PROG.ID_PROGCURSO;
END//
DELIMITER ;

-- ------------------------------------------------------------
-- store procedure 'listar plan de estudios'
-- ------------------------------------------------------------
DROP PROCEDURE IF EXISTS SP_PLAN_LIST;
DELIMITER //
CREATE PROCEDURE SP_PLAN_LIST() 
BEGIN
  SELECT CURSO.ID_CURSO, CURSO.FK_ID_IDIOMA, CURSO.FK_ID_NIVEL, CURSO.CICLO, IDIOMA.NOM_IDIOMA, NIVEL.NOM_NIVEL, COUNT(CURSO.CICLO) AS COUNTCICLO, CURSO.LIBRO
  FROM TMCURSO CURSO
  INNER JOIN TMIDIOMA IDIOMA ON CURSO.FK_ID_IDIOMA = IDIOMA.ID_IDIOMA
  INNER JOIN TXNIVEL NIVEL ON CURSO.FK_ID_NIVEL = NIVEL.ID_NIVEL
  GROUP BY IDIOMA.NOM_IDIOMA, NIVEL.NOM_NIVEL
  ORDER BY IDIOMA.ID_IDIOMA, NIVEL.ID_NIVEL;
END//
DELIMITER ;

-- ------------------------------------------------------------
-- store procedure 'listar matriculas'
-- ------------------------------------------------------------
DROP PROCEDURE IF EXISTS SP_MATRICULA_LIST;
DELIMITER //
CREATE PROCEDURE SP_MATRICULA_LIST() 
BEGIN
SELECT MAT.ID_MATRICULA, MAT.FK_COD_ESTUDIANTE_CI, MAT.FK_ID_PROGCURSO, MAT.FK_NUM_VOUCHER, MAT.FK_ID_ESTADO_MATRICULA, MAT.FECHA_MATRICULA,
ETM.NOM_ESTADO_MATRICULA, IDIOMA.NOM_IDIOMA, NIVEL.NOM_NIVEL, CURSO.CICLO, PER.NOMBRE, PER.APELLIDO_PAT, PER.APELLIDO_MAT, 
GHOR.NOM_GRUPOHORARIO, HCLA.HORA_INICIO, HCLA.HORA_SALIDA
FROM TPMATRICULA MAT
INNER JOIN TXESTADO_MATRICULA ETM ON ETM.ID_ESTADO_MATRICULA = MAT.FK_ID_ESTADO_MATRICULA
INNER JOIN TPPROG_CURSO PROG ON PROG.ID_PROGCURSO = MAT.FK_ID_PROGCURSO
INNER JOIN TPPROG_DOC_CURSO PROGDC ON PROG.FK_ID_PROG_DOC_CUR = PROGDC.ID_PROG_DOC_CUR
INNER JOIN TMCURSO CURSO ON CURSO.ID_CURSO = PROGDC.FK_ID_CURSO
INNER JOIN TMIDIOMA IDIOMA ON IDIOMA.ID_IDIOMA = CURSO.FK_ID_IDIOMA
INNER JOIN TXNIVEL NIVEL ON NIVEL.ID_NIVEL = CURSO.FK_ID_NIVEL
INNER JOIN TMDOCENTE DOC ON DOC.COD_DOCENTE_CI = PROGDC.FK_ID_DOCENTE
INNER JOIN TMUSUARIO USUARIO ON USUARIO.ID_USUARIO = DOC.FK_ID_USUARIO
INNER JOIN TMPERSONA PER ON PER.ID_PERSONA = USUARIO.FK_ID_PERSONA
INNER JOIN TMGRUPO_HORARIO GHOR ON GHOR.ID_GRUPOHORARIO = PROG.FK_ID_GRUPOHORARIO
INNER JOIN TMHORARIO_GRUPO_HORARIO HGO ON HGO.FK_ID_GRUPOHORARIO = GHOR.ID_GRUPOHORARIO
INNER JOIN TXHORAS_CLASE HCLA ON HCLA.ID_HORA = HGO.FK_ID_HORA;
END//
DELIMITER ;

-- ------------------------------------------------------------
-- store procedure 'listar matriculas según usuario'
-- ------------------------------------------------------------
DROP PROCEDURE IF EXISTS USP_MATRICULA_LIST;
DELIMITER //
CREATE PROCEDURE USP_MATRICULA_LIST(IN COD_ESTUDIANTE INT) 
BEGIN
SELECT MAT.ID_MATRICULA, MAT.FK_COD_ESTUDIANTE_CI, MAT.FK_ID_PROGCURSO, MAT.FK_NUM_VOUCHER, MAT.FK_ID_ESTADO_MATRICULA, MAT.FECHA_MATRICULA,
ETM.NOM_ESTADO_MATRICULA, IDIOMA.NOM_IDIOMA, NIVEL.NOM_NIVEL, CURSO.CICLO, PER.NOMBRE, PER.APELLIDO_PAT, PER.APELLIDO_MAT, 
GHOR.NOM_GRUPOHORARIO, HCLA.HORA_INICIO, HCLA.HORA_SALIDA
FROM TPMATRICULA MAT
INNER JOIN TXESTADO_MATRICULA ETM ON ETM.ID_ESTADO_MATRICULA = MAT.FK_ID_ESTADO_MATRICULA
INNER JOIN TPPROG_CURSO PROG ON PROG.ID_PROGCURSO = MAT.FK_ID_PROGCURSO
INNER JOIN TPPROG_DOC_CURSO PROGDC ON PROG.FK_ID_PROG_DOC_CUR = PROGDC.ID_PROG_DOC_CUR
INNER JOIN TMCURSO CURSO ON CURSO.ID_CURSO = PROGDC.FK_ID_CURSO
INNER JOIN TMIDIOMA IDIOMA ON IDIOMA.ID_IDIOMA = CURSO.FK_ID_IDIOMA
INNER JOIN TXNIVEL NIVEL ON NIVEL.ID_NIVEL = CURSO.FK_ID_NIVEL
INNER JOIN TMDOCENTE DOC ON DOC.COD_DOCENTE_CI = PROGDC.FK_ID_DOCENTE
INNER JOIN TMUSUARIO USUARIO ON USUARIO.ID_USUARIO = DOC.FK_ID_USUARIO
INNER JOIN TMPERSONA PER ON PER.ID_PERSONA = USUARIO.FK_ID_PERSONA
INNER JOIN TMGRUPO_HORARIO GHOR ON GHOR.ID_GRUPOHORARIO = PROG.FK_ID_GRUPOHORARIO
INNER JOIN TMHORARIO_GRUPO_HORARIO HGO ON HGO.FK_ID_GRUPOHORARIO = GHOR.ID_GRUPOHORARIO
INNER JOIN TXHORAS_CLASE HCLA ON HCLA.ID_HORA = HGO.FK_ID_HORA
WHERE MAT.FK_COD_ESTUDIANTE_CI = COD_ESTUDIANTE;
END//
DELIMITER ;

-- ------------------------------------------------------------
-- store procedure 'listar VOUCHERS'
-- ------------------------------------------------------------
DROP procedure IF EXISTS `SP_VOUCHER_USUARIO_LIST`;
DELIMITER $$
CREATE PROCEDURE SP_VOUCHER_USUARIO_LIST()
BEGIN
	SELECT VOU.COD, VOU.SEC, VOU.NRODOCUMENTO, CONCAT(PER.NOMBRE, ' ', PER.APELLIDO_PAT, ' ', PER.APELLIDO_MAT) AS ALUMNO,
US.ID_USUARIO, EST.COD_ESTUDIANTE_CI
FROM TMVOUCHER VOU
LEFT JOIN TMPERSONA PER ON VOU.NRODOCUMENTO = PER.DNI
LEFT JOIN TMUSUARIO US ON PER.ID_PERSONA = US.FK_ID_PERSONA
LEFT JOIN TMESTUDIANTE EST ON US.ID_USUARIO = EST.FK_ID_USUARIO;
END$$
DELIMITER ;

-- ------------------------------------------------------------
-- store procedure 'listar SOLICITUDES'
-- ------------------------------------------------------------
DROP procedure IF EXISTS `SP_SOLICITUD_LIST`;
DELIMITER $$
CREATE PROCEDURE SP_SOLICITUD_LIST()
BEGIN
SELECT SOL.ID_SOLICITUD, SOL.FK_COD_ESTUDIANTE_CI, SOL.FK_ID_CURSO, SOL.FK_ID_GRUPOHORARIO, 
CURSO.FK_ID_IDIOMA, CURSO.FK_ID_NIVEL, IDIOMA.NOM_IDIOMA, NIVEL.NOM_NIVEL, CURSO.CICLO, GHO.NOM_GRUPOHORARIO,
CONCAT(HCLA.HORA_INICIO," a ", HCLA.HORA_SALIDA) AS HORA, COUNT(distinct SOL.ID_SOLICITUD) AS SOLICITANTES
FROM TPSOLICITUD_APERTURA SOL
LEFT JOIN TMCURSO CURSO ON SOL.FK_ID_CURSO = CURSO.ID_CURSO
LEFT JOIN TMIDIOMA IDIOMA ON CURSO.FK_ID_IDIOMA = IDIOMA.ID_IDIOMA
LEFT JOIN TXNIVEL NIVEL ON CURSO.FK_ID_NIVEL = NIVEL.ID_NIVEL
LEFT JOIN TMGRUPO_HORARIO GHO ON SOL.FK_ID_GRUPOHORARIO = GHO.ID_GRUPOHORARIO
LEFT JOIN TMHORARIO_GRUPO_HORARIO HGH ON GHO.ID_GRUPOHORARIO = HGH.FK_ID_GRUPOHORARIO
INNER JOIN TXHORAS_CLASE HCLA ON HGH.FK_ID_HORA = HCLA.ID_HORA
GROUP BY SOL.FK_ID_CURSO;
END$$
DELIMITER ;


DROP procedure IF EXISTS `USP_AUTORIZACION`;
DELIMITER $$
CREATE PROCEDURE `USP_AUTORIZACION` (
P_EMAIL VARCHAR(256), P_ID_USUARIO INT, P_ID_PERSONA INT)
BEGIN
	SELECT 
		TMU.EMAIL,
        TMU.ID_USUARIO,
        TMU.FK_ID_PERSONA,
        TMU.FK_ID_ROL
	FROM
		TMUSUARIO TMU
	WHERE 
    TMU.EMAIL = P_EMAIL 
    AND 
    TMU.ID_USUARIO = P_ID_USUARIO
    AND
    TMU.FK_ID_ROL = P_ID_PERSONA;
END$$
DELIMITER ;
